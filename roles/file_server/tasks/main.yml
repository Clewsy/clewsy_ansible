---
- name: Ensure all packages required for file_server are installed.
  apt:
    name: "{{ file_server_packages }}"
    state: latest
  notify: Restart nfs server.

- stat: #Check for the existence of disks by label as defined in host specific variables (nuf_server_disks).
    path: "/dev/disk/by-label/{{ item.label }}"
  loop: "{{ nfs_server_disks }}"
  register: labels_stat

- name: Label the partitions (with e2label) if label not already applied to disk uuid (var nfs_server_disks). 
  shell: "/usr/sbin/e2label /dev/disk/by-uuid/{{ item.item.uuid }} {{ item.item.label }}"
  when: item.stat.exists == false
  loop: "{{ labels_stat.results }}"

- name: Mount the disks to /srv.
  mount:
    src: "LABEL={{ item.label }}"
    path: "/srv/{{ item.label }}"
    fstype: auto
    opts: 'defaults'
    state: mounted
  with_items: "{{ nfs_server_disks }}"

- name: Mount (bind) nfs shares to /export.
  mount:
    src: "{{ item.source_path }}"
    path: "{{ item.share_path }}"
    fstype: auto
    opts: 'bind,auto,noexec,rw,async,user,nofail'
    state: mounted
  with_items: "{{ nfs_server_shares }}"

- name: Ensure shares are writable.
  file:
    path: "{{ item.share_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0766'
  with_items: "{{ nfs_server_shares }}"

- name: Update /etc/exports with nfs shares.
  lineinfile:
    path: /etc/exports
    regexp: "{{ item.share_path }}"
    line: "{{ item.share_path }} 192.168.1.0/24(rw,sync,no_root_squash,no_subtree_check)"
  with_items: "{{ nfs_server_shares }}"
  notify: Restart nfs server.

