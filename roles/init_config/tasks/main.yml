---
- name: Set hostname. #Depend on DHCP to initiate server by host name before this is set.
  hostname:
    name: "{{ host_name }}"
    use: systemd

- name: Set local timezone.
  timezone:
    name: "{{ local_tz }}"

- name: Update apt cache and run a full upgrade.
  apt:
    upgrade: 'full'
    update_cache: yes
    autoremove: yes
    autoclean: yes
    cache_valid_time: 3600 #Cache is valid for 1 hour.

- name: Install common packages.
  apt:
    name: "{{ common_packages }}"
    state: latest

- name: Set motd.
  copy:
    src: "files/motd/motd_{{ host_name }}"
    dest: /etc/motd
    mode: 0644
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Set .bashrc.
  template:
    src: templates/.bashrc
    dest: "/home/{{ ansible_user }}/.bashrc"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Set user aliases.
  lineinfile:
    path: "/home/{{ ansible_user }}/.bash_aliases"
    state: present
    regexp: "{{ item }}"
    line: "{{ item }}"
    insertafter: EOF
    create: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_items: "{{ aliases }}"

- name: Set root aliases.
  lineinfile:
    path: "/root/.bash_aliases"
    state: present
    regexp: "{{ item }}"
    line: "{{ item }}"
    insertafter: EOF
    create: yes
  with_items: "{{ aliases }}"

- name: Ensure bash_aliases enabled for root user.
  lineinfile:
    path: "/root/.bashrc"
    line: 'if [ -f ~/.bash_aliases ]; then'
    state: present
  check_mode: yes
  register: bash_aliases_enabled

- name: Enable bash_aliases for root user.
  lineinfile:
    path: "/root/.bashrc"
    state: present
    line: |
      if [ -f ~/.bash_aliases ]; then
          . ~/.bash_aliases
      fi
    insertafter: EOF
  when: bash_aliases_enabled is changed #I.e. previous dry run task did not match and so wanted to replace line.

- name: Configure cron jobs.
  cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour }}"
    weekday: "{{ item.weekday }}"
    day: "{{ item.day }}"
    month: "{{ item.month }}"
    user: "{{ ansible_user }}"
    job: "{{ item.job }}"
  with_items: "{{ cron_jobs }}"
  when: cron_jobs.0 is defined
  notify: Restart cron.

